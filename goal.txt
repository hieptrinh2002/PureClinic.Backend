- Hệ thống quản lý phòng khám 

* Phân hệ: 
  - System && technical:
	+ Realtime: danh sách chờ bệnh nhân, push notification khi có lịch hẹn, ...
	+ chatbox: Quản lý, tư vấn bệnh nhân, lịch khám bệnh qua chat box.
	+ cron job: Tự động lập lịch hệ thống gửi reminder cho bệnh nhân trước 1 ngày khám bệnh (mailtrap)
	+ logger
	+ elastic search + logs (khó quá thì chuyển qua search full text? / Serilog)
	+ authentication && authorization
	+ Cloudinary or Azure Blob Storage (saving imgs)
	+ Caching with redis && MemoryCache (performance optimization)
	+ Clean architecture
	+ review, stars từ khách hàng 
	+ Rabbit MQ (phức tạp?)
	+ SqlServer + MongoDB + Redis
	+ Unit test
	+ Mongodb config

* Nghiệp vụ

  - System: 
	+ Hệ thống cảnh báo nếu bác sĩ kê hai loại thuốc có tương tác nguy hiểm
	+ Lịch sử dùng thuốc cần được lưu lại để tránh kê đơn trùng lặp hoặc lạm dụng thuốc.
	+ Nhắc lịch khám qua email, SMS, hoặc notification để giảm tỷ lệ bệnh nhân quên lịch. Nếu bệnh nhân không đến đúng giờ, có thể gửi nhắc nhở hoặc hủy sau X phút.
	+ Lock thời gian giữ đặt chỗ với 1 bác sĩ?
	+ Nếu bác sĩ xin nghỉ, hệ thống cần tự động chuyển lịch cho bác sĩ khác hoặc thông báo bệnh nhân.
	+ Không cho phép đặt lịch vào ngày bác sĩ đã đăng ký nghỉ phép.
	+ Thông báo cho bác sĩ nếu chưa đăng kí lịch làm việc vào tuần tiếp theo

  - Employee:
	+ Tiếp nhận yêu cầu khám bệnh và lên lịch khám
	+ Quản lý/ xem được trạng thái của bác sĩ 
	+ Quản lý trạng thái lịch hẹn: chờ xác nhận, đã hoàn tất.
	+ CRUD ....
	+ Quản lí bệnh nhân và feedback
	+ Quản lí, lênh lịch ( cuộc hẹn với bác sĩ ), tái khám nếu có cho bệnh nhân.
	+ Request đặt lịch khám bệnh với bác sĩ mong muốn? hệ thống báo nếu bác sĩ đã có cuộc hẹn vào lúc đó và đề nghị chọn đặt lịch giờ khác

  - Doctor: 
    + Quản lý bệnh án/ bệnh nhân đã khám 
	+ Quản lý bệnh nhân được chính bác sĩ đó theo dõi, lênh lộ trình, giai đoạn...., quản lý được thông tin chi tiết 
	+ Xem lịch sử khám bệnh của các bệnh nhân đã khám
	+ Xem các đơn thuốc đã kê khai
	+ Tiếp nhận cuộc hẹn khám bệnh
	+ Bác sỹ làm một ngày không quá 8 tiếng, mỗi ngày nhận tối đa 15 ca khám chữa bệnh
	+ Tính số ca khám tối đa dựa trên số giờ và khung giờ làm việc của bác sĩ
	+ Mỗi bác sĩ làm tối đa X lượt khám/ngày và chỉ làm trong khung giờ nhất định theo lịch đã đăng kí
	+ Nếu lịch khám đầy, bệnh nhân cần được đề xuất lịch khám vào ngày khác hoặc bác sĩ khác
	+ Ưu tiên khám cho nhóm đặc biệt (người già, phụ nữ mang thai, trẻ nhỏ, người khuyết tật).
	+ Tự động xếp lịch dựa trên thời gian trống của bác sĩ, tránh trùng lặp lịch khám.
	+ Khi 2 bệnh nhân đặt lịch cùng lúc, hệ thống cần lock hoặc xử lý hàng đợi (queue) để đảm bảo không có 2 lịch khám trùng nhau.
	(Sử dụng transaction trong database hoặc optimistic concurrency control để tránh lỗi double booking.)
	+ Kiểm tra xem bệnh nhân có tiền sử dị ứng thuốc không trước khi kê đơn.

  - Customer
    + Hệ thống tạo tài khoản mặc định cho người dùng  
    + Xem danh sách dịch vụ phòng khám
	+ Xem danh sách bác sĩ, thông tin chi tiết...


	* Technical: 
	Hangfire: Phù hợp với các tác vụ theo lịch hoặc công việc nặng mà không cần phản hồi ngay:
		Tự động gửi nhắc lịch khám định kỳ (hàng ngày quét danh sách bệnh nhân sắp đến hẹn để gửi thông báo).
		Dọn dẹp dữ liệu cũ (xóa lịch sử cuộc hẹn, logs quá cũ sau X ngày).
		Tạo báo cáo tự động (mỗi ngày, tuần hoặc tháng tổng hợp số liệu về bệnh nhân, doanh thu, đơn thuốc).
		Gửi email xác nhận đặt lịch nhưng có thể xử lý sau vài giây (tránh làm API chậm).

	refs: 
	Binary permission : https://www.youtube.com/watch?v=a8eQKD8w2Qs
	Authorization in ASP.NET Core | Joao Grassi's blog: https://blog.joaograssi.com/series/authorization-in-asp.net-core/
						https://github.com/joaopgrassi/authz-custom-middleware/blob/main/src/API/Authorization/UserPermissionService.cs#L43
	Soft Delete parttern: https://www.youtube.com/watch?v=zwBaWiu-rF4
	SignalR: https://positiwise.com/blog/signalr-in-asp-net-core#Key_Concepts_of_ASPNET_Core_SignalR
	Optimistic Locking vs Pessimistic Locking With EF Core: https://www.youtube.com/watch?v=lLDBVMj5He8
	Global Filters With EF Core Query Filters: https://youtu.be/q09fw5OCa_w?si=uOZLg937mjG9mocZ
	Filter Type/ Action filter in .NET Core.: https://hieutech.vn/2022/04/10-dieu-can-tranh-khi-lam-viec-voi-controller-trong-net-core.html
								  https://code-maze.com/action-filters-aspnetcore/
    Tech share: https://tech.cybozu.vn/
	multi-factor authentication and single sign-on (SSO) solutions .net api: https://learn.microsoft.com/en-us/aspnet/core/security/authentication/mfa?view=aspnetcore-9.0
	Unitest: 
		✅ Trường hợp đúng (Happy Path)
		✅ Giá trị biên (Boundary Cases)
		✅ Dữ liệu không hợp lệ (Edge Cases)
		✅ Xử lý ngoại lệ (Exception Handling)

	Đặt tính:
		+ Fact
		+ Isolation
		+ Repeatable
		+ Self-Validating
		+ Timely

***** Viewer design
 ** 
- Thêm các cuộc hẹn khám bệnh giữa khách hàng và bác sĩ  (bac sĩ, khách hàng, thời gian , trạng thái, loại cuộc hẹn (tái khám, tổng quát, chung chung ...))
- Phân loại thêm cấp độ bệnh nhân => có lộ trình điều trị (cân nhắc mongodb)
***** Quy trình đăng kí khám bệnh online
Giai đoạn 1: Đăng ký & Kiểm tra khả dụng
	Bệnh nhân đăng nhập vào hệ thống (nếu chưa có tài khoản thì đăng ký).
	Chọn chuyên khoa (nội khoa, ngoại khoa, nhi khoa, da liễu, v.v.).
	=> lấy bác sĩ theo chuyên môn 1 bác sĩ => nhiều chuyên môn, 1 chuyên môn có nhiều bác sĩ
	Chọn bác sĩ phù hợp (hiển thị danh sách bác sĩ có chuyên môn liên quan).
	Kiểm tra lịch làm việc của bác sĩ:
	Chỉ hiển thị các khung giờ còn trống.
	Không cho phép chọn quá sát thời gian khám để tránh chồng lịch.
	Bệnh nhân nhập thông tin chi tiết:
	Chọn ngày giờ mong muốn.
	Nhập lý do khám bệnh (có thể chọn từ danh sách hoặc nhập tay).
	Upload tài liệu y tế nếu có (hình ảnh, xét nghiệm, toa thuốc trước đây).
	Kiểm tra số lần hủy lịch (nếu bệnh nhân có lịch sử hủy nhiều lần, có thể yêu cầu xác minh trước khi đặt lịch mới).
Giai đoạn 2: Xác nhận lịch hẹn
	Xác thực thông tin bệnh nhân:
	Nếu lần đầu đặt khám, yêu cầu nhập số điện thoại và gửi OTP để xác minh.
	Nếu đã có tài khoản, có thể yêu cầu nhập mật khẩu hoặc xác thực email.
	Xác nhận lịch hẹn với bác sĩ:
	Nếu bác sĩ cần xác nhận thủ công, gửi thông báo đến bác sĩ để duyệt lịch.
	Nếu tự động, hệ thống kiểm tra slot trống và xác nhận ngay.
	Gửi thông báo đến bệnh nhân:
	SMS hoặc email với thông tin chi tiết lịch hẹn.
	Đính kèm hướng dẫn chuẩn bị trước khi khám (nếu có).
	Thêm lịch hẹn vào hệ thống:
	Cập nhật trạng thái lịch hẹn (đang chờ xác nhận, đã xác nhận).
	Cập nhật danh sách lịch của bác sĩ.
	Giai đoạn 3: Nhắc nhở & Xử lý hủy lịch
	Gửi nhắc nhở trước lịch hẹn:
	24h trước khi khám: Gửi SMS/email nhắc nhở.
	1h trước khi khám: Gửi thông báo push nếu có mobile app.
	Cho phép bệnh nhân hủy lịch hẹn nhưng có điều kiện:
	Nếu hủy trước 12 giờ -> Không phạt.
	Nếu hủy trong vòng 12 giờ trước khi khám -> Tính là hủy muộn. Nếu vượt quá 3 lần trong tháng có thể bị hạn chế đăng ký trong tương lai.
	Nếu hủy mà đã thanh toán trước -> Cần quy trình hoàn tiền.
	Xử lý khi bệnh nhân không đến:
	Nếu không đến khám -> Cập nhật trạng thái lịch là "Không đến".
	Nếu bệnh nhân vắng mặt 3 lần liên tục -> Hệ thống có thể yêu cầu đặt cọc trước cho lần đặt lịch tiếp theo.
3. Chặn gian lận & Xử lý xung đột lịch
	Giới hạn số lịch hẹn mỗi ngày:
	Ví dụ: Một bác sĩ chỉ nhận tối đa 20 lịch/ngày.
	Nếu bác sĩ hết slot, không cho phép đặt thêm.
	Tránh đặt trùng giờ:
	Kiểm tra xem bệnh nhân đã có lịch vào thời điểm đó hay chưa.
	Chống đặt ảo:
	Yêu cầu OTP khi đặt lịch.
	Giới hạn số lần đặt/hủy trong ngày.
*****
plan: 
- 23/12/2024 - 19/12/2024: 
	✅+ init project structure base 
	✅+ authentication (jwt/ refresh Token)
- 30/12/2024 - 05/01/2025: 
	✅+ CRUD profile API (user) 
	✅+ Send mail services
	✅+ Register accout => confirm mails when register account
	✅+ Lock account when login failed more than 5 times
	✅+ Append refresh token to client cookie
- 6/01/2025 - 12/01/2025: 
	✅- Using Bogus to seed data for system
	- FE (reactjs)
		✅+ Login / logout 
		✅+ Zustand for state management
		✅+ show list doctor
		✅+ show list partient
	- BE: 
		✅+ CRUD Appointment api (thêm, update status, )
		✅+ Update status appointment
		✅+ CRUD Doctor
		✅+ CRUD Partient
		+ Save uploaded file using Azure Blob Storage
		✅ + Api for work schedule, register schedule, get schedule of user 
		✅ + (tt chung, kinh nghiệm, chuyên ngành .....) => profile
		✅ + API Đăng kí lịch làm việc cho bác sĩ
		✅ + API Lấy lịch làm việc của một bác sĩ (optinal)
		✅ + API Tạo mới và	
		✅ + Lấy tất cả cuộc hẹn của 1 bác sỹ/ 1 patient order by appointmentDate, by status

- 13/01/2025 - 19/01/2025:
     - BE:
		✅ + Redis / memory cahing
		✅ (in progress) + MedicalReport api ( create, get , get by patient (sort by date, status..), update, delete 
		✅ + Update, add new PrescriptionDetail 
		✅ + Prescription-details( update, add new , delete,)
		✅ + Appointment (get by status, top 10 apointment pending status and sort by created time, lấy trong range time nào đó)
		✅ + MedicalFile(( update, add new , delete, ) của 1 bệnh nhân
		✅ + Filter api
		+ Notification (using RabbitMQ as a service bus, and SignalR to stream messages to a React.js front-end)
		+ Setup RabbitMq

- 19/02/2025 
		-BE: 
			* Doctor	
		  ✅- Get all patient of doctor
		 - Lấy thông tin 1 bác sĩ
		  ✅ + (tt chung, kinh nghiệm, chuyên ngành .....) => profile
		  ✅ + Đăng kí lịch làm việc cho bác sĩ
		  ✅ + Lấy lịch làm việc của một bác sĩ (optinal)
		  ✅+ Lấy tất cả thông tin cuộc hẹn khám bệnh của 1 bác sĩ  
		   (lấy tất cả cuộc hẹn vào ngày hôm nay, tuần này, tháng này) + các filter khác (optinal)
		  ✅ + Lấy danh sách bệnh nhân đang được chính mình điều trị chính
		- Lấy thông tin 1 bệnh nhân:
		  ✅ + Lấy thông tin chung của 1 bệnh nhân
		   + Lấy tất cả lịch sử khám bệnh của 1 bệnh nhân ( bao gồm hồ sơ bệnh, kết quả các lần trc, lời khuyên bs, )
		   + Lấy được tất cả các bệnh án, các file bệnh án, ảnh của 1 bệnh nhân trong các lần khám
		- Từ danh sách patient => chọn tạo lịch hẹn, chọn xem thông tin cá nhân, update status, quản lí hồ sơ patient
		- Lấy được danh sách các loại dịch vụ =>  xét nghiệm, siêu âm, nội soi, điện tim, xquang và thủ thuật - tiểu phẩu
		  ✅- Genarate invoice pdf, file kết quả sét nghiệm, file đơn thuốc

- 27/02/2025
		-BE: SginalR
		✅ IQueueService
		Quản lý hàng đợi bệnh nhân đang chờ khám.
		Cập nhật trạng thái hàng đợi khi bệnh nhân vào khám hoặc hoàn thành khám.
		Gửi sự kiện real-time để cập nhật danh sách chờ trên giao diện.
		✅ INotificationService
		Gửi thông báo real-time đến bệnh nhân hoặc bác sĩ.
		Có thể gửi thông báo khi:
		Bệnh nhân đặt lịch hẹn thành công.
		Bác sĩ có bệnh nhân mới trong danh sách.
		Hóa đơn thanh toán thành công.
		✅ IChatService
		Xử lý chat real-time giữa bệnh nhân và bác sĩ.
		Lưu trữ lịch sử trò chuyện vào database.
		Thông báo khi có tin nhắn mới

- Hàng đợi => bệnh nhân đã đặt lịch khám 
- Hàng đợi => bệnh nhân đến khám lần đầu/ chưa có đặt lich

// backgroud job => handle auto update , cancel late appointment 
// Nếu không đến khám -> run background job Cập nhật trạng thái lịch là "Không đến", send mail reminder
// Nếu bệnh nhân vắng mặt 3 lần liên tục -> Hệ thống có thể yêu cầu đặt cọc trước cho lần đặt lịch tiếp theo.


-  Voice Notification System
  	+ Gửi thông báo đến bệnh nhân khi đến lượt khám.
		+ Tích hợp với hệ thống gọi tự động để thông báo cho bệnh nhân.
		+ Có thể gửi thông báo qua SMS hoặc email nếu không có kết nối internet.
		+ Tích hợp với hệ thống gọi tự động để phát âm thanh thông báo cho bệnh nhân.
		+ Có thể gửi thông báo qua SMS hoặc email nếu không có kết nối internet.
		+ Tích hợp với hệ thống gọi tự động để phát âm thanh thông báo cho bệnh nhân.
